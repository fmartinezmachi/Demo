apiVersion: v1
kind: Namespace
metadata:
  name: DEVTEAM-ns

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: APPNAME
  namespace: DEVTEAM-ns
  labels:
    app: APPNAME
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: APPNAME
    spec:
      containers:
        - name: APPNAME
          image: globiledevopsrgi.azurecr.io/IMAGENAME:APPVERSION
          imagePullPolicy: "IfNotPresent"
          ports:
          - containerPort: 80
            name: http
          - containerPort: 443
            name: https
          resources:
              requests:
                memory: "1.5Gi"
                cpu: "500m"
              limits:
                memory: "2Gi"
                cpu: "1000m"

---

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: APPNAME-oauth2-proxy
  name: APPNAME-oauth2-proxy
  namespace: DEVTEAM-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: APPNAME-oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: APPNAME-oauth2-proxy
    spec:
      containers:
      - args:
        - --provider=github
        - --email-domain=*
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        - --github-org=globile-software
        # Register a new application
        # https://github.com/settings/applications/new
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: fb8a2c00a48e6e4075e3
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: c3cdbc3d169ee8fefa8b82acf7e8a72bb5fdfdd4
        # docker run -ti --rm python:3-alpine python -c 'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));'
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: NVVVZ2dZa3dtN0xnaEpBbVQ4Y3NLdz09
        image: docker.io/colemickens/oauth2_proxy:latest
        imagePullPolicy: Always
        name: APPNAME-oauth2-proxy
        ports:
        - containerPort: 4180
          protocol: TCP
---

apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: APPNAME-oauth2-proxy
  name: APPNAME-oauth2-service
  namespace: DEVTEAM-ns
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: APPNAME-oauth2-proxy

---

apiVersion: v1
kind: Service
metadata:
  name: APPNAME-service
  namespace: DEVTEAM-ns
spec:
  ports:
  - port: 80
    name: http
  selector:
    app: APPNAME

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: APPNAME-ingress
  namespace: DEVTEAM-ns
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-signin: https://$host/oauth2/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: https://$host/oauth2/auth
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - hosts:
    - PUBLICURLAPP
    secretName: aks-ingress-tls
  rules:
  - host: PUBLICURLAPP
    http:
      paths:
      - path: /
        backend:
          serviceName: APPNAME-service
          servicePort: 80
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: APPNAME-oauth2-proxy
  namespace: DEVTEAM-ns
spec:
  rules:
  - host: PUBLICURLAPP
    http:
      paths:
      - backend:
          serviceName: APPNAME-oauth2-service
          servicePort: 4180
        path: /oauth2
  tls:
  - hosts:
    - PUBLICURLAPP
    secretName: NVVVZ2dZa3dtN0xnaEpBbVQ4Y3NLdz09
